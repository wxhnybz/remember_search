
```
//记忆化搜索
#include<iostream>
#include<cstring>
#include<string>
#include<algorithm>
#include<cmath>
using namespace  std;
int n,m;
int x4[] = {0,0,-1,1};
int y4[] = {-1,1,0,0};
int ap[510][510];
int d[510][510];
int dfs(int x,int y){
    if(d[x][y]!=-1)return d[x][y];
    d[x][y]=1;//初始化
        for(int i=0;i<4;i++){
            int a = x+x4[i];int b = y+y4[i];
            if(a>=0&&b>=0&&a<=n&&b<=m&&ap[x][y]<ap[a][b]){
                d[x][y]=max(d[x][y],dfs(a,b)+1);
            }

        }
    return d[x][y];
}
int main(){
    cin>>n>>m;
    for(int i=1;i<=n;i++)
        for(int j=1;j<=m;j++)
            scanf("%d",&ap[i][j]);

    memset(d,-1,sizeof d);
int res = -100;
    for(int i=1;i<=n;i++){
        for(int j=1;j<=m;j++){
            res =max(res,dfs(i,j));
        }
    }
    cout<<res;
}
//#include <iostream>
//#include <cstring>
//#include <algorithm>
//
//using namespace std;
//
//const int N = 310;
//int h[N][N];
//int dp[N][N];
//int n, m;
//int ans = -1e9;
//
//int dx[4] = {-1, 0, 1, 0}, dy[4] = {0, 1, 0, -1};
//
//
//int dfs(int x, int y, int len)
//{
//
//    if(len > ans) ans = len;
//
//    for(int i = 0; i < 4; i ++)
//    {
//        int a = x + dx[i], b = y + dy[i];
//        if(a >= 0 && a < n && b >= 0 && b < m && h[x][y] > h[a][b])
//        {
//            dfs(a, b, len + 1);
//        }
//    }
//}
//
//int main()
//{
//    scanf("%d%d", &n, &m);
//    for (int i = 0; i < n; i ++ )
//        for (int j = 0; j < m; j ++ )
//            scanf("%d", &h[i][j]);
//
//    memset(dp, -1, sizeof dp);
//
//    for (int i = 0; i < n; i ++ )
//        for (int j = 0; j < m; j ++ )
//        {
//            int len = 0;
//            dfs(i, j, len);
//        }
//    printf("%d", ans + 1);
//    return 0;
//}
```
